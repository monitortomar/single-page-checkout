{"ast":null,"code":"var _jsxFileName = \"/home/quadrish/single-page-checkout/client/src/components/checkoutPromo/checkoutPromo.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./checkoutPromo.styles.css\";\n\nclass CheckoutPromo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getList = () => {\n      const {\n        updateTotalAmt\n      } = this.props;\n      updateTotalAmt({\n        total: this.props.total\n      });\n      fetch(\"/api/promo\").then(res => res.json()).then(list => {\n        return this.setState({\n          promoList: list.data\n        });\n      });\n    };\n\n    this.state = {\n      code: \"\",\n      promoList: [],\n      status: \"\",\n      desc: \"\"\n    };\n    this.promoCode = this.promoCode.bind(this);\n    this.checkStatus = this.checkStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.getList();\n  } // Retrieves the list of items from the Express app\n\n\n  promoCode(event) {\n    this.setState({\n      code: event.target.value\n    });\n  }\n\n  checkStatus(e) {\n    const {\n      updateTotalAmt\n    } = this.props;\n    console.log(typeof this.state.status);\n    this.state.promoList.map(promo => {\n      console.log(promo);\n\n      if (promo.code === this.state.code) {\n        if (promo.status === false) {\n          this.setState({\n            status: \"apply\",\n            desc: promo.description\n          });\n          let amt = this.props.total;\n\n          if (this.state.code === \"RRD4D32\") {\n            amt = this.props.total - amt / 10;\n            amt = amt > 5000 ? 5000 : amt;\n          } else {\n            amt = this.props.total - amt * 0.15;\n            amt = amt > 10000 ? 10000 : amt;\n          }\n\n          updateTotalAmt({\n            total: amt\n          });\n        } else {\n          this.setState({\n            status: \"no\"\n          });\n        }\n      } else {\n        this.setState({\n          status: \"no\"\n        });\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.status);\n\n    if (this.state.status === \"\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkout-promotion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"checkout-promotion-input\",\n        type: \"text\",\n        placeholder: \"Add Promocode\",\n        onChange: this.promoCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.checkStatus,\n        className: \"checkout-promotion-button\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Apply\"));\n    }\n\n    if (this.state.status === \"apply\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkout-promotion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"checkout-promotion-input\",\n        type: \"text\",\n        placeholder: \"Add Promocode\",\n        onChange: this.promoCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.checkStatus,\n        className: \"checkout-promotion-button-apply\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, \"Apply\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"promo-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, this.state.desc));\n    }\n\n    if (this.state.status === \"no\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkout-promotion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"checkout-promotion-input\",\n        type: \"text\",\n        placeholder: \"Add Promocode\",\n        onChange: this.promoCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.checkStatus,\n        className: \"checkout-promotion-button-no\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, \"Apply\"));\n    }\n  }\n\n} // const CheckoutPromo = () => {\n//   return (\n//     <div className=\"checkout-promotion\">\n//       <input\n//         className=\"checkout-promotion-input\"\n//         type=\"text\"\n//         placeholder=\"Add Promocode\"\n//       />\n//       <button className=\"checkout-promotion-button\" type=\"submit\">\n//         Apply\n//       </button>\n//     </div>\n//   );\n// };\n\n\nconst mapDispatchToProps = dispatch => ({\n  updateTotalAmt: total => dispatch(updateTotalAmt(total))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutPromo);","map":{"version":3,"sources":["/home/quadrish/single-page-checkout/client/src/components/checkoutPromo/checkoutPromo.component.jsx"],"names":["React","connect","CheckoutPromo","Component","constructor","props","getList","updateTotalAmt","total","fetch","then","res","json","list","setState","promoList","data","state","code","status","desc","promoCode","bind","checkStatus","componentDidMount","event","target","value","e","console","log","map","promo","description","amt","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./checkoutPromo.styles.css\";\n\nclass CheckoutPromo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"\",\n      promoList: [],\n      status: \"\",\n      desc: \"\",\n    };\n    this.promoCode = this.promoCode.bind(this);\n    this.checkStatus = this.checkStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  // Retrieves the list of items from the Express app\n  getList = () => {\n    const { updateTotalAmt } = this.props;\n    updateTotalAmt({\n      total: this.props.total,\n    });\n    fetch(\"/api/promo\")\n      .then((res) => res.json())\n      .then((list) => {\n        return this.setState({ promoList: list.data });\n      });\n  };\n\n  promoCode(event) {\n    this.setState({ code: event.target.value });\n  }\n\n  checkStatus(e) {\n    const { updateTotalAmt } = this.props;\n    console.log(typeof this.state.status);\n    this.state.promoList.map((promo) => {\n      console.log(promo);\n      if (promo.code === this.state.code) {\n        if (promo.status === false) {\n          this.setState({\n            status: \"apply\",\n            desc: promo.description,\n          });\n          let amt = this.props.total;\n          if (this.state.code === \"RRD4D32\") {\n            amt = this.props.total - amt / 10;\n            amt = amt > 5000 ? 5000 : amt;\n          } else {\n            amt = this.props.total - amt * 0.15;\n            amt = amt > 10000 ? 10000 : amt;\n          }\n          updateTotalAmt({\n            total: amt,\n          });\n        } else {\n          this.setState({\n            status: \"no\",\n          });\n        }\n      } else {\n        this.setState({\n          status: \"no\",\n        });\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.status);\n    if (this.state.status === \"\") {\n      return (\n        <div className=\"checkout-promotion\">\n          <input\n            className=\"checkout-promotion-input\"\n            type=\"text\"\n            placeholder=\"Add Promocode\"\n            onChange={this.promoCode}\n          />\n          <button\n            onClick={this.checkStatus}\n            className=\"checkout-promotion-button\"\n            type=\"submit\"\n          >\n            Apply\n          </button>\n        </div>\n      );\n    }\n    if (this.state.status === \"apply\") {\n      return (\n        <div className=\"checkout-promotion\">\n          <input\n            className=\"checkout-promotion-input\"\n            type=\"text\"\n            placeholder=\"Add Promocode\"\n            onChange={this.promoCode}\n          />\n          <button\n            onClick={this.checkStatus}\n            className=\"checkout-promotion-button-apply\"\n            type=\"submit\"\n          >\n            Apply\n          </button>\n          <div className=\"promo-desc\">{this.state.desc}</div>\n        </div>\n      );\n    }\n    if (this.state.status === \"no\") {\n      return (\n        <div className=\"checkout-promotion\">\n          <input\n            className=\"checkout-promotion-input\"\n            type=\"text\"\n            placeholder=\"Add Promocode\"\n            onChange={this.promoCode}\n          />\n          <button\n            onClick={this.checkStatus}\n            className=\"checkout-promotion-button-no\"\n            type=\"submit\"\n          >\n            Apply\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\n// const CheckoutPromo = () => {\n//   return (\n//     <div className=\"checkout-promotion\">\n//       <input\n//         className=\"checkout-promotion-input\"\n//         type=\"text\"\n//         placeholder=\"Add Promocode\"\n//       />\n//       <button className=\"checkout-promotion-button\" type=\"submit\">\n//         Apply\n//       </button>\n//     </div>\n//   );\n// };\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateTotalAmt: (total) => dispatch(updateTotalAmt(total)),\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutPromo);\n"]},"metadata":{},"sourceType":"module"}