{"ast":null,"code":"var _jsxFileName = \"/home/quadrish/single-page-checkout/src/components/buyDetails/buyDetails.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateProductCount } from \"../../redux/product/product.actions\";\nimport \"./buyDetails.styles.css\";\n\nclass BuyDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChangedHandler = event => {};\n\n    this.props = props;\n    this.state = {\n      active: 0,\n      price: 0,\n      count: 0,\n      mode: \"add\"\n    };\n    this.toggleView = this.toggleView.bind(this);\n    this.getView = this.getView.bind(this);\n  }\n\n  toggleView(e) {\n    const {\n      updateProductCount\n    } = this.props;\n\n    if (e.target.id === \"addbtn\") {\n      this.setState({\n        mode: \"added\",\n        active: 1,\n        price: this.props.price,\n        count: 1\n      });\n      updateProductCount({\n        count: 1,\n        price: this.props.price,\n        name: this.props.name\n      });\n    }\n\n    if (e.target.id === \"minus\" && this.state.count === 1) {\n      this.setState({\n        mode: \"add\",\n        active: 1,\n        price: this.props.price,\n        count: 0\n      });\n      updateProductCount({\n        count: 0,\n        price: this.props.price,\n        name: this.props.name\n      });\n    }\n\n    if (e.target.id === \"plus\") {\n      this.setState({\n        mode: \"added\",\n        active: 1,\n        count: this.state.count + 1,\n        price: this.props.price\n      });\n      updateProductCount({\n        count: this.state.count + 1,\n        price: this.props.price,\n        name: this.props.name\n      });\n    }\n\n    if (e.target.id === \"minus\" && this.state.count !== 1) {\n      this.setState({\n        mode: \"added\",\n        active: 1,\n        count: this.state.count - 1,\n        price: this.props.price\n      });\n      updateProductCount({\n        count: this.state.count - 1,\n        price: this.props.price,\n        name: this.props.name\n      });\n    }\n  }\n\n  getView(mode) {\n    const views = {\n      add: /*#__PURE__*/React.createElement(\"button\", {\n        id: `addbtn`,\n        className: \"buy-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, \"ADD TO CART\"),\n      added: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"plus-minus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: `minus`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        size: \"1\",\n        maxLength: \"2\",\n        value: this.state.count,\n        onChange: event => this.inputChangedHandler(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        id: `plus`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, \"+\"))\n    };\n    return views[mode];\n  }\n\n  render() {\n    console.log(this.porps);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.toggleView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }\n    }, this.getView(this.state.mode));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateProductCount: product => dispatch(updateProductCount(product))\n});\n\nexport default connect(null, mapDispatchToProps)(BuyDetails);","map":{"version":3,"sources":["/home/quadrish/single-page-checkout/src/components/buyDetails/buyDetails.component.jsx"],"names":["React","connect","updateProductCount","BuyDetails","Component","constructor","props","inputChangedHandler","event","state","active","price","count","mode","toggleView","bind","getView","e","target","id","setState","name","views","add","added","render","console","log","porps","mapDispatchToProps","dispatch","product"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateProductCount } from \"../../redux/product/product.actions\";\nimport \"./buyDetails.styles.css\";\n\nclass BuyDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      active: 0,\n      price: 0,\n      count: 0,\n      mode: \"add\",\n    };\n    this.toggleView = this.toggleView.bind(this);\n    this.getView = this.getView.bind(this);\n  }\n\n  toggleView(e) {\n    const { updateProductCount } = this.props;\n    if (e.target.id === \"addbtn\") {\n      this.setState({\n        mode: \"added\",\n        active: 1,\n        price: this.props.price,\n        count: 1,\n      });\n      updateProductCount({\n        count: 1,\n        price: this.props.price,\n        name: this.props.name,\n      });\n    }\n    if (e.target.id === \"minus\" && this.state.count === 1) {\n      this.setState({\n        mode: \"add\",\n        active: 1,\n        price: this.props.price,\n        count: 0,\n      });\n      updateProductCount({\n        count: 0,\n        price: this.props.price,\n        name: this.props.name,\n      });\n    }\n    if (e.target.id === \"plus\") {\n      this.setState({\n        mode: \"added\",\n        active: 1,\n        count: this.state.count + 1,\n        price: this.props.price,\n      });\n      updateProductCount({\n        count: this.state.count + 1,\n        price: this.props.price,\n        name: this.props.name,\n      });\n    }\n    if (e.target.id === \"minus\" && this.state.count !== 1) {\n      this.setState({\n        mode: \"added\",\n        active: 1,\n        count: this.state.count - 1,\n        price: this.props.price,\n      });\n      updateProductCount({\n        count: this.state.count - 1,\n        price: this.props.price,\n        name: this.props.name,\n      });\n    }\n  }\n\n  inputChangedHandler = (event) => {};\n\n  getView(mode) {\n    const views = {\n      add: (\n        <button id={`addbtn`} className=\"buy-details\">\n          ADD TO CART\n        </button>\n      ),\n      added: (\n        <div className=\"plus-minus\">\n          <button id={`minus`}>-</button>\n          <input\n            type=\"text\"\n            size=\"1\"\n            maxLength=\"2\"\n            value={this.state.count}\n            onChange={(event) => this.inputChangedHandler(event)}\n          />\n          <button id={`plus`}>+</button>\n        </div>\n      ),\n    };\n    return views[mode];\n  }\n\n  render() {\n    console.log(this.porps);\n\n    return <div onClick={this.toggleView}>{this.getView(this.state.mode)}</div>;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateProductCount: (product) => dispatch(updateProductCount(product)),\n});\n\nexport default connect(null, mapDispatchToProps)(BuyDetails);\n"]},"metadata":{},"sourceType":"module"}